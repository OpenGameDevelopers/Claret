var FSO = new ActiveXObject( "Scripting.FileSystemObject" );
var Args = WScript.Arguments.Named;
var Shell = new ActiveXObject( "WScript.Shell" );

// The Release GUID was generated by Visual Studio upon creating the project
// Debug and Profile GUIDs were generated via the guidgen.exe program
var DebugGUID = "C48D691B-C8F4-48ea-9A4C-647385956374";
var ReleaseGUID = "E21D7602-F317-4DAC-8F05-803AB2EDD32A";
var ProfileGUID = "E6F1C843-D3D7-4df9-B6B7-CC47B540340B";

var DebugString = " [DEBUG]";
var ReleaseString = "";
var ProfileString = " [PROFILE]";

var ConfigOption = Args( "config" );
var AssemblyInfoTemplateOption = Args( "assemblyinfotmpl" );
var AssemblyInfoOption = Args( "assemblyinfo" );

var GitTag = Shell.Exec( "git describe --tags" );
var NearFinalTagName = GitTag.StdOut.ReadAll( );
var TagName = String( NearFinalTagName ).replace( /_[0-9].*/g, "" );
TagName = String( TagName ).replace( /\n/, '' );

var VersionCommand = 'git describe --match "' + TagName + '_[0-9]*" HEAD ';
VersionCommand = String( VersionCommand ).replace( /\n/g, '' );
var GitVersionNumberRaw = Shell.Exec( VersionCommand );
var GitVersionNumber = GitVersionNumberRaw.StdOut.ReadAll( );
var VersionNumber = String( GitVersionNumber ).replace( /-g.*/g, "" );
VersionNumber = String( VersionNumber ).replace( /[a-z A-Z]*_/g, "" );
VersionNumber = String( VersionNumber ).replace( /-/, "." );
VersionNumber = String( VersionNumber ).replace( /\n/, "" );

var BuildNumber = String( VersionNumber ).replace( /[0-9].[0-9].[0-9]/, "" );
BuildNumber = String( BuildNumber ).replace( /\n/g, "" );

if( BuildNumber == "" )
{
	BuildNumber = "0";
	VersionNumber = VersionNumber + "." + BuildNumber;
}

var RevisionBuildNumber = String( VersionNumber ).replace( /[0-9].[0-9]./, "" );
RevisionBuildNumber = String( RevisionBuildNumber ).replace( /.[0-9]/, "" );
RevisionBuildNumber = String( RevisionBuildNumber ).replace( /\n/, "" );

var MinorBuildNumber = String( VersionNumber ).replace( /[0-9]/, "" );
MinorBuildNumber = String( MinorBuildNumber ).replace( /.[^.]*$/, "" );
MinorBuildNumber = String( MinorBuildNumber ).replace( /./, "" );
MinorBuildNumber = String( MinorBuildNumber ).replace( /.[0-9]/, "" );
MinorBuildNumber = String( MinorBuildNumber ).replace( /\n/g, "" );

var MajorBuildNumber = String( VersionNumber ).replace( /.[0-9].[0-9].[0-9]/, "" );
MajorBuildNumber = String( MajorBuildNumber ).replace( /\n/, '' );

WScript.Echo( "------------------------------------" );
WScript.Echo( "Generating Assembly Information file" );
WScript.Echo( "------------------------------------" );
WScript.Echo( "Configuration:          " + ConfigOption );
if( ConfigOption == "Debug" )
{
WScript.Echo( "GUID:                   " + DebugGUID );
}
if( ConfigOption == "Release" )
{
	WScript.Echo( "GUID:                   " + ReleaseGUID );
}
if( ConfigOption == "Profile" )
{
	WScript.Echo( "GUID:                   " + ProfileGUID );
}
WScript.Echo( "Assembly Info Template: " + AssemblyInfoTemplateOption );
WScript.Echo( "Assembly Info Output:   " + AssemblyInfoOption );
WScript.Echo( "Git tag: " + TagName );
WScript.Echo( "Version: " + VersionNumber );
WScript.Echo( "" );

var AssemblyInfoTemplate = FSO.OpenTextFile( AssemblyInfoTemplateOption, 1, false );
var TempString = AssemblyInfoTemplate.ReadAll( );
AssemblyInfoTemplate.Close( );

if( ConfigOption == "Debug" )
{
	TempString = String( TempString ).replace( /\$BUILD\$/g, DebugString );
	TempString = String( TempString ).replace( /\$BUILDTAG\$/g, " " + TagName );
	TempString = String( TempString ).replace( /\$VERSION\$/g, " [Ver. " +
		VersionNumber + "]" );
	TempString = String( TempString ).replace( /\$GUID\$/g, DebugGUID );
}
if( ConfigOption == "Release" )
{
	TempString = String( TempString ).replace( /\$BUILD\$/g, ReleaseString );
	TempString = String( TempString ).replace( /\$BUILDTAG\$/g, "" );
	TempString = String( TempString ).replace( /\$VERSION\$/g, "" );
	TempString = String( TempString ).replace( /\$GUID\$/g, ReleaseGUID );
}
if( ConfigOption == "Profile" )
{
	TempString = String( TempString ).replace( /\$BUILD\$/g, ProfileString );
	TempString = String( TempString ).replace( /\$BUILDTAG\$/g, " " + TagName );
	TempString = String( TempString ).replace( /\$VERSION\$/g, " [Ver. " +
		VersionNumber + "]" );
	TempString = String( TempString ).replace( /\$GUID\$/g, ProfileGUID );
}

TempString = String( TempString ).replace( /\$BUILDVERSION\$/g,
	VersionNumber );

var AssemblyFile = FSO.CreateTextFile( AssemblyInfoOption, 2, true );
AssemblyFile.Write( TempString );
AssemblyFile.Close( );

